{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\VideoUploadPage\\\\VideoUploadPage.js\";\nimport React, { useState } from 'react';\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\nimport Dropzone from 'react-dropzone';\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\nconst PrivateOptions = [{\n  value: 0,\n  label: \"Private\"\n}, {\n  value: 1,\n  label: \"Publuc\"\n}];\nconst CategoryOptions = [{\n  value: 0,\n  label: \"Film & Animation\"\n}, {\n  value: 1,\n  label: \"Autos & Vehicles\"\n}, {\n  value: 2,\n  label: \"Music\"\n}, {\n  value: 3,\n  label: \"Pets & Animals\"\n}];\n\nfunction VideoUploadPage() {\n  //state 안에 value 저장하기\n  const [VideoTitle, setVieoTitle] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Private, setPrivate] = useState(0);\n  const [Category, setCategory] = useState(\"Film & Animation\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Upload Video\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: true,\n    multiple: true,\n    maxSize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: '300px',\n      height: '240px',\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    type: \"plus\",\n    style: {\n      fontSize: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: true,\n    alt: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: true,\n    value: VideoTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: true,\n    value: Description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, PrivateOptions.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, CategoryOptions.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}\n\nexport default VideoUploadPage;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/VideoUploadPage/VideoUploadPage.js"],"names":["React","useState","Typography","Button","Form","message","Input","Icon","Dropzone","TextArea","Title","PrivateOptions","value","label","CategoryOptions","VideoUploadPage","VideoTitle","setVieoTitle","Description","setDescription","Private","setPrivate","Category","setCategory","maxWidth","margin","textAlign","marginBottom","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontSize","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {Typography, Button, Form, message, Input, Icon} from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nconst {TextArea} = Input;\r\nconst {Title} = Typography;\r\n\r\nconst PrivateOptions = [\r\n    {value:0, label:\"Private\"},\r\n    {value:1, label:\"Publuc\"}\r\n]\r\nconst CategoryOptions = [\r\n    {value:0, label:\"Film & Animation\"},\r\n    {value:1, label:\"Autos & Vehicles\"},\r\n    {value:2, label:\"Music\"},\r\n    {value:3, label:\"Pets & Animals\"},\r\n]\r\n\r\nfunction VideoUploadPage() {\r\n\r\n    //state 안에 value 저장하기\r\n    const [VideoTitle, setVieoTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Private, setPrivate] = useState(0);\r\n    const [Category, setCategory]=useState(\"Film & Animation\");\r\n\r\n    return (\r\n        <div>\r\n            <div style={{maxWidth:'700px', margin:'2rem auto'}}>\r\n                <div style={{textAlign:'center', marginBottom:'2rem'}}>\r\n                    <Title level={2}>Upload Video</Title>\r\n                </div>\r\n\r\n                <Form  onSubmit>\r\n                    <div style={{display:'flex', justifyContent:'space-between'}}>\r\n                        {/* Drop Zone */}\r\n                        <Dropzone onDrop multiple maxSize>\r\n                            {({getRootProps,getInputProps})=>(\r\n                                <div style={{width:'300px', height:'240px', border:'1px solid lightgray', display:'flex', alignItems:'center', justifyContent:'center'}} {...getRootProps()}>\r\n                                    <input {...getInputProps()}/>\r\n                                    <Icon type='plus' style={{fontSize:'3rem'}}/>\r\n                                </div>\r\n                            )}\r\n                        </Dropzone>\r\n\r\n                        {/* Thumbnail Zone */}\r\n                        <div>\r\n                            <img src alt />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <label>Title</label>\r\n                    <Input onChange value={VideoTitle}/>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <label>Description</label>\r\n                    <TextArea onChange value={Description} />\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <select onChange>\r\n                        {PrivateOptions.map((item, index)=>(\r\n                            <option key={index} value={item.value}>{item.label}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <select onChange>\r\n                        {CategoryOptions.map((item, index) => (\r\n                            <option key={index} value={item.value}>{item.label}</option>\r\n                        ))}\r\n                    </select>\r\n                    \r\n                    <br/>\r\n                    <br/>\r\n                    <Button type=\"primary\" size=\"large\" onClick>\r\n                        Submit\r\n                    </Button>\r\n                \r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoUploadPage;"]},"metadata":{},"sourceType":"module"}