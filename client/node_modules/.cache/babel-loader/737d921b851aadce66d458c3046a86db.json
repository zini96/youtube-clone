{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\VideoUploadPage\\\\VideoUploadPage.js\";\nimport React, { useState } from 'react';\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\nconst PrivateOptions = [{\n  value: 0,\n  label: \"Private\"\n}, {\n  value: 1,\n  label: \"Publuc\"\n}];\nconst CategoryOptions = [{\n  value: 0,\n  label: \"Film & Animation\"\n}, {\n  value: 1,\n  label: \"Autos & Vehicles\"\n}, {\n  value: 2,\n  label: \"Music\"\n}, {\n  value: 3,\n  label: \"Pets & Animals\"\n}];\n\nfunction VideoUploadPage() {\n  //state 안에 value 저장하기\n  const [VideoTitle, setVieoTitle] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Private, setPrivate] = useState(0);\n  const [Category, setCategory] = useState(\"Film & Animation\"); //비디오,썸네일 파일Path와 정보 저장\n\n  const [FilePath, setFilePath] = useState(\"\");\n  const [Duration, setDuration] = useState(\"\");\n  const [ThumbnailPath, setThumbnailPath] = useState(\"\");\n\n  const onTitleChange = e => {\n    setVieoTitle(e.currentTarget.value);\n  };\n\n  const onDescriptionChange = e => {\n    setDescription(e.currentTarget.value);\n  };\n\n  const onPrivateChange = e => {\n    setPrivate(e.currentTarget.value);\n  };\n\n  const onCategoryChange = e => {\n    setCategory(e.currentTarget.value);\n  };\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append(\"file\", files[0]);\n    Axios.post('/api/video/uploadfiles', formData, config).then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n        let variable = {\n          //서버에서 받은 url과 파일이름을 변수에 저장\n          url: response.data.url,\n          filename: response.data.filename\n        };\n        setFilePath(response.data.url);\n        Axios.post('/api/video/thumbnail', variable).then(response => {\n          if (response.data.success) {\n            console.log(response.data);\n            setDuration(response.data.fileDuration);\n            setThumbnailPath(response.data.url);\n          } else {\n            alert('썸네일 생성에 실패했습니다.');\n          }\n        });\n      } else {\n        alert('비디오 업로드를 실패했습니다.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Upload Video\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: 100000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: '300px',\n      height: '240px',\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    type: \"plus\",\n    style: {\n      fontSize: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: true,\n    alt: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: onTitleChange,\n    value: VideoTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: onDescriptionChange,\n    value: Description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: onPrivateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, PrivateOptions.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: onCategoryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, CategoryOptions.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, item.label))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}\n\nexport default VideoUploadPage;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/VideoUploadPage/VideoUploadPage.js"],"names":["React","useState","Typography","Button","Form","message","Input","Icon","Dropzone","Axios","TextArea","Title","PrivateOptions","value","label","CategoryOptions","VideoUploadPage","VideoTitle","setVieoTitle","Description","setDescription","Private","setPrivate","Category","setCategory","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","onTitleChange","e","currentTarget","onDescriptionChange","onPrivateChange","onCategoryChange","onDrop","files","formData","FormData","config","header","append","post","then","response","data","success","console","log","variable","url","filename","fileDuration","alert","maxWidth","margin","textAlign","marginBottom","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontSize","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {Typography, Button, Form, message, Input, Icon} from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport Axios from 'axios';\r\n\r\nconst {TextArea} = Input;\r\nconst {Title} = Typography;\r\n\r\nconst PrivateOptions = [\r\n    {value:0, label:\"Private\"},\r\n    {value:1, label:\"Publuc\"}\r\n]\r\nconst CategoryOptions = [\r\n    {value:0, label:\"Film & Animation\"},\r\n    {value:1, label:\"Autos & Vehicles\"},\r\n    {value:2, label:\"Music\"},\r\n    {value:3, label:\"Pets & Animals\"},\r\n]\r\n\r\nfunction VideoUploadPage() {\r\n\r\n    //state 안에 value 저장하기\r\n    const [VideoTitle, setVieoTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Private, setPrivate] = useState(0);\r\n    const [Category, setCategory]=useState(\"Film & Animation\");\r\n    //비디오,썸네일 파일Path와 정보 저장\r\n    const [FilePath, setFilePath] = useState(\"\");\r\n    const [Duration, setDuration] = useState(\"\");\r\n    const [ThumbnailPath, setThumbnailPath] = useState(\"\");\r\n\r\n    const onTitleChange = (e) =>{\r\n        setVieoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (e) =>{\r\n        setDescription(e.currentTarget.value)\r\n    }\r\n\r\n    const onPrivateChange = (e)=>{\r\n        setPrivate(e.currentTarget.value)\r\n    }\r\n\r\n    const onCategoryChange = (e)=>{\r\n        setCategory(e.currentTarget.value)\r\n    }\r\n\r\n    const onDrop = (files)=>{\r\n        let formData = new FormData();\r\n        const config = {\r\n            header:{'content-type':'multipart/form-data'}\r\n        }\r\n        formData.append(\"file\", files[0])\r\n        Axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response=>{\r\n                if(response.data.success){\r\n                    console.log(response.data)\r\n\r\n                    let variable={ //서버에서 받은 url과 파일이름을 변수에 저장\r\n                        url: response.data.url,\r\n                        filename: response.data.filename\r\n                    }\r\n\r\n                    setFilePath(response.data.url)\r\n\r\n                    Axios.post('/api/video/thumbnail', variable)\r\n                        .then(response=>{\r\n                            if(response.data.success){\r\n                                console.log(response.data)\r\n                                setDuration(response.data.fileDuration);\r\n                                setThumbnailPath(response.data.url);\r\n                            }else{\r\n                                alert('썸네일 생성에 실패했습니다.')\r\n                            }\r\n                        })\r\n                }else{\r\n                    alert('비디오 업로드를 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{maxWidth:'700px', margin:'2rem auto'}}>\r\n                <div style={{textAlign:'center', marginBottom:'2rem'}}>\r\n                    <Title level={2}>Upload Video</Title>\r\n                </div>\r\n\r\n                <Form  onSubmit>\r\n                    <div style={{display:'flex', justifyContent:'space-between'}}>\r\n                        {/* Drop Zone */}\r\n                        <Dropzone onDrop={onDrop} multiple={false} maxSize={100000000}>\r\n                            {({getRootProps,getInputProps})=>(\r\n                                <div style={{width:'300px', height:'240px', border:'1px solid lightgray', display:'flex', alignItems:'center', justifyContent:'center'}} {...getRootProps()}>\r\n                                    <input {...getInputProps()}/>\r\n                                    <Icon type='plus' style={{fontSize:'3rem'}}/>\r\n                                </div>\r\n                            )}\r\n                        </Dropzone>\r\n\r\n                        {/* Thumbnail Zone */}\r\n                        <div>\r\n                            <img src alt />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <label>Title</label>\r\n                    <Input onChange={onTitleChange} value={VideoTitle}/>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <label>Description</label>\r\n                    <TextArea onChange={onDescriptionChange} value={Description} />\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <select onChange={onPrivateChange}>\r\n                        {PrivateOptions.map((item, index)=>(\r\n                            <option key={index} value={item.value}>{item.label}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <select onChange={onCategoryChange}>\r\n                        {CategoryOptions.map((item, index) => (\r\n                            <option key={index} value={item.value}>{item.label}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <Button type=\"primary\" size=\"large\" onClick>\r\n                        Submit\r\n                    </Button>\r\n                \r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoUploadPage;"]},"metadata":{},"sourceType":"module"}