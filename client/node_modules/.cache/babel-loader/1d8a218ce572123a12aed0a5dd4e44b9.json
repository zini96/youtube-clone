{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\NavBar\\\\Sections\\\\SearchVideo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport { Input, Space } from 'antd';\nimport Axios from 'axios';\nconst {\n  Search\n} = Input;\n\nfunction SearchVideo(props) {\n  const [keyword, setKeyword] = useState('%^&');\n  const [UserName, setUserName] = useState([]);\n\n  const handleSearch = event => {\n    if (event.target.value === '') {\n      setKeyword('%^&');\n    } else {\n      setKeyword(event.target.value);\n    }\n  }; //     const onSubmit = (e) => {\n  //         e.preventDefault();\n  //         const { page } = qs.parse(location.search, {\n  //             ignoreQueryPrefix: true,\n  //         });\n  //         dispatch(searchPosts({ page: page, option: options, content: value }));\n  //         setValue('');\n  // };\n\n\n  useEffect(() => {\n    Axios.post('/api/user/userSearch').then(response => {\n      if (response.data.success) {\n        console.log(response.data.doc); // setVideo(response.data.videos)\n      } else {\n        alert('유저 검색에 실패했습니다.');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Menu, {\n    mode: props.mode,\n    className: \"searchBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"subscription\",\n    style: {\n      width: '45%',\n      height: '68px',\n      padding: '14px 0px 14px 30px',\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    className: \"searchInput\",\n    allowClear: true,\n    enterButton: \"Search\",\n    size: \"large\",\n    onChange: handleSearch,\n    type: \"text\",\n    name: \"searchText\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default SearchVideo;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/NavBar/Sections/SearchVideo.js"],"names":["React","useState","useEffect","Menu","Input","Space","Axios","Search","SearchVideo","props","keyword","setKeyword","UserName","setUserName","handleSearch","event","target","value","post","then","response","data","success","console","log","doc","alert","mode","width","height","padding","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,KAAnB;;AAGA,SAASI,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD;AACJ,GAND,CAJwB,CAY5B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEIf,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,KAAK,CAACY,IAAN,CAAW,sBAAX,EACGC,IADH,CACQC,QAAQ,IAAE;AACd,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcI,GAA1B,EADqB,CAErB;AACH,OAHD,MAGK;AACHC,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF,KARH;AASH,GAVQ,EAUP,EAVO,CAAT;AAYA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEjB,KAAK,CAACkB,IAAlB;AAAwB,IAAA,SAAS,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,MAAM,EAAE,MAAtB;AAA8BC,MAAAA,OAAO,EAAC,oBAAtC;AAA6DC,MAAAA,MAAM,EAAC;AAApE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,UAAU,MAFd;AAGI,IAAA,WAAW,EAAC,QAHhB;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,QAAQ,EAAEjB,YALd;AAMI,IAAA,IAAI,EAAC,MANT;AAMgB,IAAA,IAAI,EAAC,YANrB;AAOI,IAAA,WAAW,EAAC,yDAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAgBH;;AAED,eAAeN,WAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport { Menu } from 'antd';\r\nimport { Input, Space } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nfunction SearchVideo(props) {\r\n    const [keyword, setKeyword] = useState('%^&');\r\n    const [UserName, setUserName] = useState([])\r\n\r\n    const handleSearch = (event) => {\r\n        if (event.target.value === '') {\r\n          setKeyword('%^&');\r\n        } else {\r\n          setKeyword(event.target.value);\r\n        }\r\n    };\r\n\r\n//     const onSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const { page } = qs.parse(location.search, {\r\n//             ignoreQueryPrefix: true,\r\n//         });\r\n        \r\n//         dispatch(searchPosts({ page: page, option: options, content: value }));\r\n//         setValue('');\r\n// };\r\n\r\n    useEffect(()=>{\r\n        Axios.post('/api/user/userSearch')\r\n          .then(response=>{\r\n            if(response.data.success){\r\n                console.log(response.data.doc)\r\n                // setVideo(response.data.videos)\r\n            }else{\r\n              alert('유저 검색에 실패했습니다.')\r\n            }\r\n          })\r\n    },[])\r\n\r\n    return (\r\n        <Menu mode={props.mode} className=\"searchBox\" >\r\n            <Menu.Item key=\"subscription\" style={{width:'45%', height: '68px', padding:'14px 0px 14px 30px' , margin:'0'}}>\r\n                <Search \r\n                    className=\"searchInput\"\r\n                    allowClear\r\n                    enterButton=\"Search\"\r\n                    size=\"large\"\r\n                    onChange={handleSearch}\r\n                    type=\"text\" name=\"searchText\"\r\n                    placeholder=\"검색어를 입력하세요\"\r\n                />\r\n                \r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default SearchVideo;"]},"metadata":{},"sourceType":"module"}