{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\Section\\\\ReplyComment.js\";\nimport React, { useEffect, useState } from 'react';\nimport SingleComment from './SingleComment';\n\nfunction ReplyComment(props) {\n  const [ChildCommentNumber, setChildCommentNumber] = useState(0);\n  useEffect(() => {\n    let commentNumber = 0;\n    props.commentLists.map(comment => {\n      if (comment.responseTo === props.parentCommentId) {\n        commentNumber++;\n      }\n    });\n    setChildCommentNumber(commentNumber);\n  }, []);\n\n  const renderReplyComment = parentCommentId => {\n    props.commentLists.map((comment, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, comment.responseTo === parentCommentId && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SingleComment, {\n      comment: comment,\n      postId: props.videoId,\n      refreshFunction: props.refreshFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ReplyComment, {\n      commentLists: props.commentLists,\n      videoId: props.videoId,\n      parentCommentId: comment._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, renderReplyComment(props.parentCommentId));\n}\n\nexport default ReplyComment;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/VideoDetailPage/Section/ReplyComment.js"],"names":["React","useEffect","useState","SingleComment","ReplyComment","props","ChildCommentNumber","setChildCommentNumber","commentNumber","commentLists","map","comment","responseTo","parentCommentId","renderReplyComment","index","videoId","refreshFunction","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,CAAD,CAA5D;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIO,aAAa,GAAG,CAApB;AAEAH,IAAAA,KAAK,CAACI,YAAN,CAAmBC,GAAnB,CAAwBC,OAAD,IAAW;AAC9B,UAAGA,OAAO,CAACC,UAAR,KAAuBP,KAAK,CAACQ,eAAhC,EAAgD;AAC5CL,QAAAA,aAAa;AAChB;AACJ,KAJD;AAMAD,IAAAA,qBAAqB,CAACC,aAAD,CAArB;AAEH,GAXQ,EAWP,EAXO,CAAT;;AAcA,QAAMM,kBAAkB,GAAID,eAAD,IAAmB;AAC1CR,IAAAA,KAAK,CAACI,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,OAAD,EAAUI,KAAV,kBACnB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,OAAO,CAACC,UAAR,KAAuBC,eAAvB,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEF,OAAxB;AAAiC,MAAA,MAAM,EAAEN,KAAK,CAACW,OAA/C;AAAwD,MAAA,eAAe,EAAEX,KAAK,CAACY,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,YAAY,EAAEZ,KAAK,CAACI,YAAlC;AAAgD,MAAA,OAAO,EAAEJ,KAAK,CAACW,OAA/D;AAAwE,MAAA,eAAe,EAAEL,OAAO,CAACO,GAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFR,CADJ;AAUH,GAXD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKJ,kBAAkB,CAACT,KAAK,CAACQ,eAAP,CAFvB,CADJ;AAMH;;AAED,eAAeT,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport SingleComment from './SingleComment';\r\n\r\nfunction ReplyComment(props) {\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        let commentNumber = 0;\r\n\r\n        props.commentLists.map((comment)=>{\r\n            if(comment.responseTo === props.parentCommentId){\r\n                commentNumber ++\r\n            }\r\n        })\r\n        \r\n        setChildCommentNumber(commentNumber)\r\n\r\n    },[])\r\n\r\n\r\n    const renderReplyComment = (parentCommentId)=>{\r\n        props.commentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div>\r\n                        <SingleComment comment={comment} postId={props.videoId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment commentLists={props.commentLists} videoId={props.videoId} parentCommentId={comment._id}/>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {renderReplyComment(props.parentCommentId)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReplyComment;"]},"metadata":{},"sourceType":"module"}