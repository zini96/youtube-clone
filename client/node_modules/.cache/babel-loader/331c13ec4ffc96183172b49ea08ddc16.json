{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FaCode } from \"react-icons/fa\";\nimport { Card, Icon, Avatar, Col, Typography, Row } from 'antd';\nimport Axios from 'axios';\nimport moment from 'moment';\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\n\nfunction LandingPage() {\n  const [Video, setVideo] = useState([]);\n  useEffect(() => {\n    Axios.get('/api/video/getVideos').then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n        setVideo(response.data.videos);\n      } else {\n        alert('비디오 가져오기를 실패했습니다.');\n      }\n    });\n  }, []);\n  const renderCards = Video.map((video, index) => {\n    var minutes = Math.floor(video.duration / 60);\n    var seconds = Math.floor(video.duration - minutes * 60);\n    {\n      /* Col 사이즈별로 들어가는 동영상이 다르게 설정 (총 윈도우 너비=24) */\n    }\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 8,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/video/post/${video._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '100%'\n      },\n      src: `http://localgost:5000/${video.thumbnail}`,\n      alt: \"\\uC378\\uB124\\uC77C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, minutes, \" : \", seconds)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: video.writer.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 27\n        }\n      }),\n      title: video.title,\n      description: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, video.writer.name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, video.views, \" views\"), \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 79\n      }\n    }, moment(video.createdAt).format(\"MMM Do YY\")));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Recommended\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: [32, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, renderCards));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","FaCode","Card","Icon","Avatar","Col","Typography","Row","Axios","moment","Title","Meta","LandingPage","Video","setVideo","get","then","response","data","success","console","log","videos","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","_id","position","width","thumbnail","writer","image","title","name","marginLeft","views","createdAt","format","margin"],"mappings":"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","sourcesContent":["import React, { useEffect , useState} from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport {Card, Icon, Avatar, Col, Typography, Row} from 'antd';\nimport Axios from 'axios';\nimport moment from'moment';\nconst {Title} = Typography;\nconst {Meta} = Card;\n\nfunction LandingPage() {\n    const [Video, setVideo] = useState([])\n\n    useEffect(()=>{\n        Axios.get('/api/video/getVideos')\n          .then(response=>{\n            if(response.data.success){\n                console.log(response.data)\n                setVideo(response.data.videos)\n            }else{\n              alert('비디오 가져오기를 실패했습니다.')\n            }\n          })\n    },[])\n\n    const renderCards = Video.map((video,index)=>{\n        var minutes = Math.floor(video.duration/60);\n        var seconds = Math.floor((video.duration - minutes * 60));\n\n        {/* Col 사이즈별로 들어가는 동영상이 다르게 설정 (총 윈도우 너비=24) */}\n        return <Col lg={6} md={8} xs={24}>\n            <a href={`/video/post/${video._id}`}>\n                <div style={{ position: 'relative' }}>\n                    <img style={{ width: '100%' }} src={`http://localgost:5000/${video.thumbnail}`} alt=\"썸네일\" />\n                    <div className='duration'>\n                        <span>{minutes} : {seconds}</span>\n                    </div>\n                </div>\n            </a>\n            <br />\n            <Meta avatar={<Avatar src={video.writer.image} />} title={video.title} description=\"\" />\n            <span>{video.writer.name}</span>\n            <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\n        </Col>\n    })\n\n\n\n    return (\n        <div style={{width:'85%', margin:'3rem auto'}}>\n            <Title level={2}>Recommended</Title>\n            <hr/>\n            <Row gutter={[32,16]}>\n                {renderCards}\n            </Row>\n\n        </div>\n    )\n}\n\nexport default LandingPage\n"]},"metadata":{},"sourceType":"module"}