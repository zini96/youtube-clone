{"ast":null,"code":"var _jsxFileName = \"D:\\\\Youtube\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\Section\\\\Comment.js\";\nimport Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SingleComment from \"./SingleComment\";\nimport ReplyComment from \"./ReplyComment\";\nimport { Avatar } from \"antd\";\n\nfunction Comment(props) {\n  const user = useSelector(state => state.user);\n  const [Visible, setVisible] = useState(false);\n  const [commentValue, setCommentValue] = useState(\"\");\n  const [CommentNumber, setCommentNumber] = useState(0); // console.log(user)\n\n  useEffect(() => {\n    setCommentNumber(props.commentLists.length);\n  }, [props.commentLists]);\n\n  const handleClick = event => {\n    setCommentValue(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const variables = {\n      content: commentValue,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    Axios.post(\"/api/comment/saveComment\", variables).then(response => {\n      if (response.data.success) {\n        console.log(response.data.result);\n        setCommentValue(\"\"); //초기화\n\n        props.refreshFunction(response.data.result); //save한 comment의 정보를 부모 component에서 받을 수 있게!\n      } else {\n        alert(\"코멘트 등록에 실패했습니다.\");\n      }\n    });\n  };\n\n  const CommentList = props.commentLists && props.commentLists.map((comment, index) => !comment.responseTo && /*#__PURE__*/React.createElement(React.Fragment, {\n    key: comment._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ReplyComment, {\n    parentCommentId: comment._id,\n    commentLists: props.commentLists,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"700\",\n      marginLeft: \"0.5rem\",\n      marginBottom: \"1rem\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      setVisible(!Visible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"\\uB313\\uAE00(\", CommentNumber, \")\"), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), Visible && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatarBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: user.userData.image,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginBottom: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, user.userData.name)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"commentForm rootCommentForm\",\n    style: {\n      width: \"100%\"\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"commentInput\",\n    onChange: handleClick,\n    value: commentValue,\n    placeholder: \"\\uCF54\\uBA58\\uD2B8\\uB97C \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"commentBtn\",\n    style: {\n      width: \"15%\"\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), props.commentLists && props.commentLists.map((comment, index) => !comment.responseTo && /*#__PURE__*/React.createElement(React.Fragment, {\n    key: comment._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ReplyComment, {\n    parentCommentId: comment._id,\n    commentLists: props.commentLists,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  })))));\n}\n\nexport default Comment;","map":{"version":3,"sources":["D:/Youtube/client/src/components/views/VideoDetailPage/Section/Comment.js"],"names":["Axios","React","useState","useEffect","useSelector","SingleComment","ReplyComment","Avatar","Comment","props","user","state","Visible","setVisible","commentValue","setCommentValue","CommentNumber","setCommentNumber","commentLists","length","handleClick","event","currentTarget","value","onSubmit","preventDefault","variables","content","writer","userData","_id","postId","post","then","response","data","success","console","log","result","refreshFunction","alert","CommentList","map","comment","index","responseTo","marginTop","fontWeight","marginLeft","marginBottom","cursor","display","height","image","name","width"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport { Avatar } from \"antd\";\r\n\r\nfunction Comment(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const [Visible, setVisible] = useState(false);\r\n  const [commentValue, setCommentValue] = useState(\"\");\r\n  const [CommentNumber, setCommentNumber] = useState(0);\r\n\r\n  // console.log(user)\r\n\r\n  useEffect(() => {\r\n    setCommentNumber(props.commentLists.length);\r\n  }, [props.commentLists]);\r\n\r\n  const handleClick = (event) => {\r\n    setCommentValue(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const variables = {\r\n      content: commentValue,\r\n      writer: user.userData._id,\r\n      postId: props.postId,\r\n    };\r\n\r\n    Axios.post(\"/api/comment/saveComment\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        console.log(response.data.result);\r\n        setCommentValue(\"\"); //초기화\r\n        props.refreshFunction(response.data.result); //save한 comment의 정보를 부모 component에서 받을 수 있게!\r\n      } else {\r\n        alert(\"코멘트 등록에 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const CommentList =\r\n    props.commentLists &&\r\n    props.commentLists.map(\r\n      (comment, index) =>\r\n        !comment.responseTo && (\r\n          <React.Fragment key={comment._id}>\r\n            <SingleComment\r\n              comment={comment}\r\n              postId={props.postId}\r\n              refreshFunction={props.refreshFunction}\r\n            />\r\n            <ReplyComment\r\n              parentCommentId={comment._id}\r\n              commentLists={props.commentLists}\r\n              postId={props.postId}\r\n              refreshFunction={props.refreshFunction}\r\n            />\r\n          </React.Fragment>\r\n        )\r\n    );\r\n\r\n  return (\r\n    <div style={{ marginTop: \"1.5rem\" }}>\r\n      <br />\r\n      <p\r\n        style={{\r\n          fontWeight: \"700\",\r\n          marginLeft: \"0.5rem\",\r\n          marginBottom: \"1rem\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => {\r\n          setVisible(!Visible);\r\n        }}\r\n      >\r\n        댓글({CommentNumber})\r\n      </p>\r\n      <hr style={{ marginBottom: \"1rem\" }} />\r\n      {Visible && (\r\n        <div>\r\n          <div style={{ display: \"flex\", height: \"100%\" }}>\r\n            <div className=\"avatarBox\">\r\n              <Avatar src={user.userData.image} alt=\"avatar\" />\r\n              <p style={{ marginBottom: \"0\" }}>{user.userData.name}</p>\r\n            </div>\r\n\r\n            {/* Root Comment Form */}\r\n            <form\r\n              className=\"commentForm rootCommentForm\"\r\n              style={{ width: \"100%\" }}\r\n              onSubmit={onSubmit}\r\n            >\r\n              <textarea\r\n                className=\"commentInput\"\r\n                onChange={handleClick}\r\n                value={commentValue}\r\n                placeholder=\"코멘트를 작성해 주세요\"\r\n              />\r\n\r\n              <button\r\n                className=\"commentBtn\"\r\n                style={{ width: \"15%\" }}\r\n                onClick={onSubmit}\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          {/* Comment Lists */}\r\n          <hr style={{ marginTop: \"1rem\" }} />\r\n\r\n          {props.commentLists &&\r\n            props.commentLists.map(\r\n              (comment, index) =>\r\n                !comment.responseTo && (\r\n                  <React.Fragment key={comment._id}>\r\n                    <SingleComment\r\n                      comment={comment}\r\n                      postId={props.postId}\r\n                      refreshFunction={props.refreshFunction}\r\n                    />\r\n                    <ReplyComment\r\n                      parentCommentId={comment._id}\r\n                      commentLists={props.commentLists}\r\n                      postId={props.postId}\r\n                      refreshFunction={props.refreshFunction}\r\n                    />\r\n                  </React.Fragment>\r\n                )\r\n            )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"]},"metadata":{},"sourceType":"module"}