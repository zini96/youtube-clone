{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\Section\\\\LikeDislikes.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Tooltip, Icon } from 'antd';\nimport Axios from 'axios';\n\nfunction LikeDislikes(props) {\n  const [Likes, setLikes] = useState(0);\n  const [LikeAction, setLikeAction] = useState(null);\n  const [Dislikes, setDislikes] = useState(0);\n  const [DislikeAction, setDislikeAction] = useState(null);\n  let variable = {}; // console.log(localStorage.getItem('userId'))\n\n  if (props.video) {\n    variable = {\n      videoId: props.videoId,\n      userId: localStorage.getItem('userId')\n    };\n  } else {\n    variable = {\n      commentId: props.commentId,\n      userId: localStorage.getItem('userId')\n    };\n  }\n\n  useEffect(() => {\n    Axios.post('/api/like/getLikes', variable).then(response => {\n      if (response.data.success) {\n        //console.log(response.data.likes)\n        //얼마나 많은 좋아요를 받았는가\n        setLikes(response.data.likes.length); //내가 이미 좋아요를 눌렀는가\n\n        response.data.likes.map(like => {\n          if (like.userId === props.userId) {\n            setLikeAction('liked');\n          }\n        });\n      } else {\n        alert('Likes 정보를 가져오지 못했습니다.');\n      }\n    });\n    Axios.post('/api/like/getDislikes', variable).then(response => {\n      if (response.data.success) {\n        //console.log(response.data.likes)\n        //얼마나 많은 싫어요를 받았는가\n        setDislikes(response.data.dislikes.length); //내가 이미 싫어요를 눌렀는가\n\n        response.data.dislikes.map(dislike => {\n          if (dislike.userId === props.userId) {\n            setDislikeAction('disliked');\n          }\n        });\n      } else {\n        alert('Dislikes 정보를 가져오지 못했습니다.');\n      }\n    });\n  }, []);\n\n  const onLike = () => {\n    if (LikeAction === null) {\n      //클릭이 되어있지 않을때\n      Axios.post('/api/like/upLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(Likes + 1);\n          setLikeAction('liked'); //Dislike가 먼저 클릭이 되어있었던 경우\n\n          if (DislikeAction !== null) {\n            setDislikeAction(null);\n            setDislikes(Dislikes - 1);\n          }\n        } else {\n          // alert('Like를 올리지 못했습니다.')\n          console.log(response.data.err);\n        }\n      });\n    } else {\n      //클릭이 되어있을때(좋아요 취소)\n      Axios.post('/api/like/unLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(Likes - 1);\n          setLikeAction(null);\n        } else {\n          alert('Like를 취소하지 못했습니다.');\n        }\n      });\n    }\n  };\n\n  const onDisLike = () => {\n    if (DislikeAction === null) {\n      //클릭이 되어있지 않을때\n      Axios.post('/api/like/upDislike', variable).then(response => {\n        if (response.data.success) {\n          setDislikes(Dislikes + 1);\n          setDislikeAction('disliked'); //like가 먼저 클릭이 되어있었던 경우\n\n          if (LikeAction !== null) {\n            setLikeAction(null);\n            setLikes(Likes - 1);\n          }\n        } else {\n          alert('DisLike를 올리지 못했습니다.');\n        }\n      });\n    } else {\n      //클릭이 되어있을때(좋아요 취소)\n      Axios.post('/api/like/unDislike', variable).then(response => {\n        if (response.data.success) {\n          setDislikes(Dislikes - 1);\n          setDislikeAction(null);\n        } else {\n          alert('Dislike를 취소하지 못했습니다.');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-like\",\n    style: {\n      marginRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"like\",\n    theme: LikeAction === 'liked' ? 'filled' : 'outlined',\n    onClick: onLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: '8px',\n      cursor: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \" \", Likes, \" \")), /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-dislike\",\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Disike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"dislike\",\n    theme: DislikeAction === 'disliked' ? 'filled' : 'outlined',\n    onClick: onDisLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: '8px',\n      cursor: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \" \", Dislikes, \" \")));\n}\n\nexport default LikeDislikes;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/VideoDetailPage/Section/LikeDislikes.js"],"names":["React","useEffect","useState","Tooltip","Icon","Axios","LikeDislikes","props","Likes","setLikes","LikeAction","setLikeAction","Dislikes","setDislikes","DislikeAction","setDislikeAction","variable","video","videoId","userId","localStorage","getItem","commentId","post","then","response","data","success","likes","length","map","like","alert","dislikes","dislike","onLike","console","log","err","onDisLike","marginRight","paddingLeft","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Tooltip, Icon} from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction LikeDislikes(props) {\r\n    const [Likes, setLikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n\r\n    let variable ={ }\r\n\r\n    // console.log(localStorage.getItem('userId'))\r\n\r\n    if(props.video){\r\n        variable = {videoId: props.videoId, userId:localStorage.getItem('userId')}\r\n    }else{\r\n        variable = {commentId:props.commentId, userId:localStorage.getItem('userId')}\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        Axios.post('/api/like/getLikes', variable)\r\n            .then(response=>{\r\n                if(response.data.success){\r\n                    //console.log(response.data.likes)\r\n\r\n                    //얼마나 많은 좋아요를 받았는가\r\n                    setLikes(response.data.likes.length)\r\n\r\n                    //내가 이미 좋아요를 눌렀는가\r\n                    response.data.likes.map(like => {\r\n                        if(like.userId === props.userId){\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                }else{\r\n                    alert('Likes 정보를 가져오지 못했습니다.')\r\n                }\r\n            })\r\n\r\n            Axios.post('/api/like/getDislikes', variable)\r\n            .then(response=>{\r\n                if(response.data.success){\r\n                    //console.log(response.data.likes)\r\n\r\n                    //얼마나 많은 싫어요를 받았는가\r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    //내가 이미 싫어요를 눌렀는가\r\n                    response.data.dislikes.map(dislike => {\r\n                        if(dislike.userId === props.userId){\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                }else{\r\n                    alert('Dislikes 정보를 가져오지 못했습니다.')\r\n                }\r\n            })\r\n    },[])\r\n\r\n    const onLike = ()=>{\r\n        if(LikeAction === null){\r\n            //클릭이 되어있지 않을때\r\n            Axios.post('/api/like/upLike', variable)\r\n                .then(response=>{\r\n                    if(response.data.success){\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n\r\n                        //Dislike가 먼저 클릭이 되어있었던 경우\r\n                        if(DislikeAction !== null){\r\n                            setDislikeAction(null)\r\n                            setDislikes(Dislikes - 1)\r\n                        }\r\n                    }else{\r\n                        // alert('Like를 올리지 못했습니다.')\r\n                        console.log(response.data.err)\r\n                    }\r\n                })\r\n        }else{\r\n            //클릭이 되어있을때(좋아요 취소)\r\n            Axios.post('/api/like/unLike', variable)\r\n            .then(response=>{\r\n                if(response.data.success){\r\n                    setLikes(Likes -1)\r\n                    setLikeAction(null)\r\n                }else{\r\n                    alert('Like를 취소하지 못했습니다.')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const onDisLike = () => {\r\n        if (DislikeAction === null) {\r\n            //클릭이 되어있지 않을때\r\n            Axios.post('/api/like/upDislike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        //like가 먼저 클릭이 되어있었던 경우\r\n                        if (LikeAction !== null) {\r\n                            setLikeAction(null)\r\n                            setLikes(Likes - 1)\r\n                        }\r\n                    } else {\r\n                        alert('DisLike를 올리지 못했습니다.')\r\n                    }\r\n                })\r\n        } else {\r\n            //클릭이 되어있을때(좋아요 취소)\r\n            Axios.post('/api/like/unDislike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n                    } else {\r\n                        alert('Dislike를 취소하지 못했습니다.')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* 좋아요 */}\r\n            <span key=\"comment-basic-like\" style={{marginRight:'5px'}}>\r\n                <Tooltip title=\"Like\">\r\n                    <Icon \r\n                        type=\"like\"\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{paddingLeft:'8px', cursor:'auto'}}> {Likes} </span>\r\n            </span>\r\n\r\n            {/* 싫어요 */}\r\n            <span  key=\"comment-basic-dislike\" style={{marginRight:'10px'}}>\r\n                <Tooltip title=\"Disike\">\r\n                    <Icon \r\n                        type=\"dislike\"\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDisLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{paddingLeft:'8px', cursor:'auto'}}> {Dislikes} </span>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LikeDislikes;"]},"metadata":{},"sourceType":"module"}