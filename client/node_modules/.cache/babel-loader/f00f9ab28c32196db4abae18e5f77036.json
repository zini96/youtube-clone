{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useRefCache } from \"../useRefCache\";\nimport { delegateEvent } from \"./utils\";\n/**\n *\n * @remarks \\@since 5.0.0 Moved the `AddEventListenerOptions` to no longer be\n * part of an `options` object.\n */\n\nexport function useScrollListener(_a) {\n  var once = _a.once,\n      _b = _a.passive,\n      passive = _b === void 0 ? true : _b,\n      signal = _a.signal,\n      capture = _a.capture,\n      _c = _a.enabled,\n      enabled = _c === void 0 ? true : _c,\n      onScroll = _a.onScroll;\n  var scrollHandlerRef = useRefCache(onScroll);\n  useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n\n    var eventHandler = delegateEvent(\"scroll\", window, true, {\n      once: once,\n      passive: passive,\n      signal: signal,\n      capture: capture\n    });\n    var scrollHandler = scrollHandlerRef.current;\n    eventHandler.add(scrollHandler);\n    return function () {\n      eventHandler.remove(scrollHandler);\n    };\n  }, [capture, enabled, once, passive, scrollHandlerRef, signal]);\n}","map":{"version":3,"sources":["../../src/events/useScrollListener.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,OAA1B;AAEA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,aAAT,QAA8B,SAA9B;AAgBA;;;;;;AAKA,OAAM,SAAU,iBAAV,CAA4B,EAA5B,EAOsB;MAN1B,IAAI,GAAA,EAAA,CAAA,I;MACJ,EAAA,GAAA,EAAA,CAAA,O;MAAA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;MACd,MAAM,GAAA,EAAA,CAAA,M;MACN,OAAO,GAAA,EAAA,CAAA,O;MACP,EAAA,GAAA,EAAA,CAAA,O;MAAA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;MACd,QAAQ,GAAA,EAAA,CAAA,Q;AAER,MAAM,gBAAgB,GAAG,WAAW,CAAC,QAAD,CAApC;AACA,EAAA,SAAS,CAAC,YAAA;AACR,QAAI,CAAC,OAAL,EAAc;AACZ;AACD;;AAED,QAAM,YAAY,GAAG,aAAa,CAAC,QAAD,EAAW,MAAX,EAAmB,IAAnB,EAAyB;AACzD,MAAA,IAAI,EAAA,IADqD;AAEzD,MAAA,OAAO,EAAA,OAFkD;AAGzD,MAAA,MAAM,EAAA,MAHmD;AAIzD,MAAA,OAAO,EAAA;AAJkD,KAAzB,CAAlC;AAMA,QAAM,aAAa,GAAG,gBAAgB,CAAC,OAAvC;AACA,IAAA,YAAY,CAAC,GAAb,CAAiB,aAAjB;AAEA,WAAO,YAAA;AACL,MAAA,YAAY,CAAC,MAAb,CAAoB,aAApB;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAAC,OAAD,EAAU,OAAV,EAAmB,IAAnB,EAAyB,OAAzB,EAAkC,gBAAlC,EAAoD,MAApD,CAjBM,CAAT;AAkBD","sourceRoot":"","sourcesContent":["import { useEffect } from \"react\";\nimport { useRefCache } from \"../useRefCache\";\nimport { delegateEvent } from \"./utils\";\n/**\n *\n * @remarks \\@since 5.0.0 Moved the `AddEventListenerOptions` to no longer be\n * part of an `options` object.\n */\nexport function useScrollListener(_a) {\n    var once = _a.once, _b = _a.passive, passive = _b === void 0 ? true : _b, signal = _a.signal, capture = _a.capture, _c = _a.enabled, enabled = _c === void 0 ? true : _c, onScroll = _a.onScroll;\n    var scrollHandlerRef = useRefCache(onScroll);\n    useEffect(function () {\n        if (!enabled) {\n            return;\n        }\n        var eventHandler = delegateEvent(\"scroll\", window, true, {\n            once: once,\n            passive: passive,\n            signal: signal,\n            capture: capture,\n        });\n        var scrollHandler = scrollHandlerRef.current;\n        eventHandler.add(scrollHandler);\n        return function () {\n            eventHandler.remove(scrollHandler);\n        };\n    }, [capture, enabled, once, passive, scrollHandlerRef, signal]);\n}\n//# sourceMappingURL=useScrollListener.js.map"]},"metadata":{},"sourceType":"module"}