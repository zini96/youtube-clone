{"ast":null,"code":"import { useRef } from \"react\";\nimport { useUserInteractionMode } from \"../mode/UserInteractionModeListener\";\nimport { findMatchIndex } from \"../search/findMatchIndex\";\nimport { useKeyboardFocusContext } from \"./movementContext\";\nimport { focusElement, getFirstFocusableIndex, getLastFocusableIndex, getNextFocusableIndex, isNotFocusable } from \"./utils\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\n\nvar noop = function () {// do nothing\n};\n/**\n * @remarks \\@since 5.0.0\n */\n\n\nexport function useKeyboardFocus(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.onFocus,\n      onFocus = _a === void 0 ? noop : _a,\n      _b = options.onKeyDown,\n      onKeyDown = _b === void 0 ? noop : _b,\n      _c = options.onSearch,\n      onSearch = _c === void 0 ? noop : _c,\n      _d = options.onIncrement,\n      onIncrement = _d === void 0 ? noop : _d,\n      _e = options.onDecrement,\n      onDecrement = _e === void 0 ? noop : _e,\n      _f = options.onJumpToFirst,\n      onJumpToFirst = _f === void 0 ? noop : _f,\n      _g = options.onJumpToLast,\n      onJumpToLast = _g === void 0 ? noop : _g,\n      _h = options.onFocusChange,\n      onFocusChange = _h === void 0 ? focusElement : _h,\n      getDefaultFocusIndex = options.getDefaultFocusIndex;\n  var mode = useUserInteractionMode();\n  var focusIndex = useRef(-1);\n\n  var _j = useKeyboardFocusContext(),\n      config = _j.config,\n      loopable = _j.loopable,\n      searchable = _j.searchable,\n      watching = _j.watching,\n      includeDisabled = _j.includeDisabled;\n\n  return {\n    focusIndex: focusIndex,\n    onFocus: function (event) {\n      var _a;\n\n      onFocus(event);\n\n      if (event.isPropagationStopped()) {\n        return;\n      }\n\n      if (event.target !== event.currentTarget) {\n        var i = watching.current.findIndex(function (_a) {\n          var element = _a.element;\n          return element === event.target;\n        });\n\n        if (i !== -1) {\n          focusIndex.current = i;\n        }\n\n        return;\n      }\n\n      var defaultFocusIndex;\n\n      if (getDefaultFocusIndex) {\n        defaultFocusIndex = getDefaultFocusIndex(watching.current.map(function (_a) {\n          var element = _a.element;\n          return element;\n        }), event.currentTarget);\n      } else {\n        defaultFocusIndex = getFirstFocusableIndex(watching.current, includeDisabled);\n      } // this makes it so that if you click the container element without\n      // clicking any child, it doesn't focus the first element again\n\n\n      if (defaultFocusIndex === -1 || mode !== \"keyboard\") {\n        return;\n      }\n\n      focusIndex.current = defaultFocusIndex;\n      var element = (_a = watching.current[focusIndex.current]) === null || _a === void 0 ? void 0 : _a.element;\n      element && onFocusChange(element, focusIndex.current);\n    },\n    onKeyDown: function (event) {\n      onKeyDown(event);\n\n      if (event.isPropagationStopped()) {\n        return;\n      }\n\n      var key = event.key,\n          altKey = event.altKey,\n          ctrlKey = event.ctrlKey,\n          metaKey = event.metaKey,\n          shiftKey = event.shiftKey;\n      var _a = config.current,\n          incrementKeys = _a.incrementKeys,\n          decrementKeys = _a.decrementKeys,\n          jumpToFirstKeys = _a.jumpToFirstKeys,\n          jumpToLastKeys = _a.jumpToLastKeys;\n\n      var update = function (index) {\n        var _a;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (focusIndex.current === index) {\n          return;\n        }\n\n        focusIndex.current = index;\n        var element = (_a = watching.current[index]) === null || _a === void 0 ? void 0 : _a.element;\n        element && onFocusChange(element, focusIndex.current);\n      };\n\n      if (searchable && key.length === 1 && // can't search with space since it is generally a click event\n      key !== \" \" && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n        onSearch({\n          key: key,\n          event: event\n        });\n\n        if (event.isPropagationStopped()) {\n          return;\n        }\n\n        var values = watching.current.map(function (_a) {\n          var content = _a.content,\n              element = _a.element;\n\n          if (isNotFocusable(element, includeDisabled)) {\n            return \"\";\n          }\n\n          return content;\n        });\n        update(findMatchIndex(key, values, focusIndex.current));\n      } else if (jumpToFirstKeys.includes(key)) {\n        onJumpToFirst({\n          key: key,\n          event: event\n        });\n\n        if (event.isPropagationStopped()) {\n          return;\n        }\n\n        update(getFirstFocusableIndex(watching.current, includeDisabled));\n      } else if (jumpToLastKeys.includes(key)) {\n        onJumpToLast({\n          key: key,\n          event: event\n        });\n\n        if (event.isPropagationStopped()) {\n          return;\n        }\n\n        update(getLastFocusableIndex(watching.current, includeDisabled));\n      } else if (incrementKeys.includes(key)) {\n        onIncrement({\n          key: key,\n          event: event\n        });\n\n        if (event.isPropagationStopped()) {\n          return;\n        }\n\n        update(getNextFocusableIndex({\n          loopable: loopable,\n          watching: watching.current,\n          increment: true,\n          includeDisabled: includeDisabled,\n          currentFocusIndex: focusIndex.current\n        }));\n      } else if (decrementKeys.includes(key)) {\n        onDecrement({\n          key: key,\n          event: event\n        });\n\n        if (event.isPropagationStopped()) {\n          return;\n        }\n\n        update(getNextFocusableIndex({\n          loopable: loopable,\n          watching: watching.current,\n          increment: false,\n          includeDisabled: includeDisabled,\n          currentFocusIndex: focusIndex.current\n        }));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["../../src/keyboardMovement/useKeyboardFocus.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { useRef } from \"react\";\nimport { useUserInteractionMode } from \"../mode/UserInteractionModeListener\";\nimport { findMatchIndex } from \"../search/findMatchIndex\";\nimport { useKeyboardFocusContext } from \"./movementContext\";\nimport { focusElement, getFirstFocusableIndex, getLastFocusableIndex, getNextFocusableIndex, isNotFocusable, } from \"./utils\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nvar noop = function () {\n    // do nothing\n};\n/**\n * @remarks \\@since 5.0.0\n */\nexport function useKeyboardFocus(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.onFocus, onFocus = _a === void 0 ? noop : _a, _b = options.onKeyDown, onKeyDown = _b === void 0 ? noop : _b, _c = options.onSearch, onSearch = _c === void 0 ? noop : _c, _d = options.onIncrement, onIncrement = _d === void 0 ? noop : _d, _e = options.onDecrement, onDecrement = _e === void 0 ? noop : _e, _f = options.onJumpToFirst, onJumpToFirst = _f === void 0 ? noop : _f, _g = options.onJumpToLast, onJumpToLast = _g === void 0 ? noop : _g, _h = options.onFocusChange, onFocusChange = _h === void 0 ? focusElement : _h, getDefaultFocusIndex = options.getDefaultFocusIndex;\n    var mode = useUserInteractionMode();\n    var focusIndex = useRef(-1);\n    var _j = useKeyboardFocusContext(), config = _j.config, loopable = _j.loopable, searchable = _j.searchable, watching = _j.watching, includeDisabled = _j.includeDisabled;\n    return {\n        focusIndex: focusIndex,\n        onFocus: function (event) {\n            var _a;\n            onFocus(event);\n            if (event.isPropagationStopped()) {\n                return;\n            }\n            if (event.target !== event.currentTarget) {\n                var i = watching.current.findIndex(function (_a) {\n                    var element = _a.element;\n                    return element === event.target;\n                });\n                if (i !== -1) {\n                    focusIndex.current = i;\n                }\n                return;\n            }\n            var defaultFocusIndex;\n            if (getDefaultFocusIndex) {\n                defaultFocusIndex = getDefaultFocusIndex(watching.current.map(function (_a) {\n                    var element = _a.element;\n                    return element;\n                }), event.currentTarget);\n            }\n            else {\n                defaultFocusIndex = getFirstFocusableIndex(watching.current, includeDisabled);\n            }\n            // this makes it so that if you click the container element without\n            // clicking any child, it doesn't focus the first element again\n            if (defaultFocusIndex === -1 || mode !== \"keyboard\") {\n                return;\n            }\n            focusIndex.current = defaultFocusIndex;\n            var element = (_a = watching.current[focusIndex.current]) === null || _a === void 0 ? void 0 : _a.element;\n            element && onFocusChange(element, focusIndex.current);\n        },\n        onKeyDown: function (event) {\n            onKeyDown(event);\n            if (event.isPropagationStopped()) {\n                return;\n            }\n            var key = event.key, altKey = event.altKey, ctrlKey = event.ctrlKey, metaKey = event.metaKey, shiftKey = event.shiftKey;\n            var _a = config.current, incrementKeys = _a.incrementKeys, decrementKeys = _a.decrementKeys, jumpToFirstKeys = _a.jumpToFirstKeys, jumpToLastKeys = _a.jumpToLastKeys;\n            var update = function (index) {\n                var _a;\n                event.preventDefault();\n                event.stopPropagation();\n                if (focusIndex.current === index) {\n                    return;\n                }\n                focusIndex.current = index;\n                var element = (_a = watching.current[index]) === null || _a === void 0 ? void 0 : _a.element;\n                element && onFocusChange(element, focusIndex.current);\n            };\n            if (searchable &&\n                key.length === 1 &&\n                // can't search with space since it is generally a click event\n                key !== \" \" &&\n                !altKey &&\n                !ctrlKey &&\n                !metaKey &&\n                !shiftKey) {\n                onSearch({ key: key, event: event });\n                if (event.isPropagationStopped()) {\n                    return;\n                }\n                var values = watching.current.map(function (_a) {\n                    var content = _a.content, element = _a.element;\n                    if (isNotFocusable(element, includeDisabled)) {\n                        return \"\";\n                    }\n                    return content;\n                });\n                update(findMatchIndex(key, values, focusIndex.current));\n            }\n            else if (jumpToFirstKeys.includes(key)) {\n                onJumpToFirst({ key: key, event: event });\n                if (event.isPropagationStopped()) {\n                    return;\n                }\n                update(getFirstFocusableIndex(watching.current, includeDisabled));\n            }\n            else if (jumpToLastKeys.includes(key)) {\n                onJumpToLast({ key: key, event: event });\n                if (event.isPropagationStopped()) {\n                    return;\n                }\n                update(getLastFocusableIndex(watching.current, includeDisabled));\n            }\n            else if (incrementKeys.includes(key)) {\n                onIncrement({ key: key, event: event });\n                if (event.isPropagationStopped()) {\n                    return;\n                }\n                update(getNextFocusableIndex({\n                    loopable: loopable,\n                    watching: watching.current,\n                    increment: true,\n                    includeDisabled: includeDisabled,\n                    currentFocusIndex: focusIndex.current,\n                }));\n            }\n            else if (decrementKeys.includes(key)) {\n                onDecrement({ key: key, event: event });\n                if (event.isPropagationStopped()) {\n                    return;\n                }\n                update(getNextFocusableIndex({\n                    loopable: loopable,\n                    watching: watching.current,\n                    increment: false,\n                    includeDisabled: includeDisabled,\n                    currentFocusIndex: focusIndex.current,\n                }));\n            }\n        },\n    };\n}\n//# sourceMappingURL=useKeyboardFocus.js.map"]},"metadata":{},"sourceType":"module"}