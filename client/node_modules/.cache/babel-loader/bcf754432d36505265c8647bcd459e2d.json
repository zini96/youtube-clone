{"ast":null,"code":"/**\n * Gets the current percentage based on the min, max, and current value.\n *\n * @returns the percentage that the `value` is between the `min` and `max`\n * values.\n * @internal\n * @remarks \\@since 4.0.1 uses an object for options instead of multiple\n * arguments.\n */\nexport function getPercentage(_a) {\n  var min = _a.min,\n      max = _a.max,\n      value = _a.value,\n      _b = _a.validate,\n      validate = _b === void 0 ? true : _b;\n\n  if (validate) {\n    if (min >= max) {\n      throw new RangeError(\"A range must have the min value less than the max value\");\n    }\n\n    if (value > max || value < min) {\n      throw new RangeError(\"A value must be between the min and max values\");\n    }\n  }\n\n  var range = max - min;\n  var start = value - min;\n  var percentage = start / range;\n  return Math.max(0, Math.min(Math.abs(percentage), 1));\n}","map":{"version":3,"sources":["../src/getPercentage.ts"],"names":[],"mappings":"AA0BA;;;;;;;;;AASA,OAAM,SAAU,aAAV,CAAwB,EAAxB,EAKiB;MAJrB,GAAG,GAAA,EAAA,CAAA,G;MACH,GAAG,GAAA,EAAA,CAAA,G;MACH,KAAK,GAAA,EAAA,CAAA,K;MACL,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;;AAEf,MAAI,QAAJ,EAAc;AACZ,QAAI,GAAG,IAAI,GAAX,EAAgB;AACd,YAAM,IAAI,UAAJ,CACJ,yDADI,CAAN;AAGD;;AAED,QAAI,KAAK,GAAG,GAAR,IAAe,KAAK,GAAG,GAA3B,EAAgC;AAC9B,YAAM,IAAI,UAAJ,CAAe,gDAAf,CAAN;AACD;AACF;;AAED,MAAM,KAAK,GAAG,GAAG,GAAG,GAApB;AACA,MAAM,KAAK,GAAG,KAAK,GAAG,GAAtB;AACA,MAAM,UAAU,GAAG,KAAK,GAAG,KAA3B;AACA,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,UAAT,CAAT,EAA+B,CAA/B,CAAZ,CAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * Gets the current percentage based on the min, max, and current value.\n *\n * @returns the percentage that the `value` is between the `min` and `max`\n * values.\n * @internal\n * @remarks \\@since 4.0.1 uses an object for options instead of multiple\n * arguments.\n */\nexport function getPercentage(_a) {\n    var min = _a.min, max = _a.max, value = _a.value, _b = _a.validate, validate = _b === void 0 ? true : _b;\n    if (validate) {\n        if (min >= max) {\n            throw new RangeError(\"A range must have the min value less than the max value\");\n        }\n        if (value > max || value < min) {\n            throw new RangeError(\"A value must be between the min and max values\");\n        }\n    }\n    var range = max - min;\n    var start = value - min;\n    var percentage = start / range;\n    return Math.max(0, Math.min(Math.abs(percentage), 1));\n}\n//# sourceMappingURL=getPercentage.js.map"]},"metadata":{},"sourceType":"module"}