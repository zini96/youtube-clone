{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\Section\\\\Comment.js\";\nimport Axios from 'axios';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\n\nfunction Comment(props) {\n  const videoId = props.postId;\n  const user = useSelector(state => state.user);\n  const [commentValue, setCommentValue] = useState(\"\");\n\n  const handleClick = event => {\n    setCommentValue(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const variables = {\n      content: commentValue,\n      writer: user.userData._id,\n      postId: videoId\n    };\n    Axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        console.log(response.data.result);\n        setCommentValue(\"\"); //초기화\n\n        props.refreshFunction(response.data.result); //save한 comment의 정보를 부모 component에서 받을 수 있게!\n      } else {\n        alert('코멘트 등록에 실패했습니다.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '1.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Replies\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), console.log(props.commentLists), props.commentLists && props.commentLists.map((comment, index) => !comment.responseTo && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SingleComment, {\n    comment: comment,\n    postId: videoId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ReplyComment, {\n    parentCommentId: comment._id,\n    commentLists: props.commentLists,\n    videoId: videoId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleClick,\n    value: commentValue,\n    placeholder: \"\\uCF54\\uBA58\\uD2B8\\uB97C \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nexport default Comment;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/VideoDetailPage/Section/Comment.js"],"names":["Axios","React","useState","useSelector","SingleComment","ReplyComment","Comment","props","videoId","postId","user","state","commentValue","setCommentValue","handleClick","event","currentTarget","value","onSubmit","preventDefault","variables","content","writer","userData","_id","post","then","response","data","success","console","log","result","refreshFunction","alert","marginTop","commentLists","map","comment","index","responseTo","display","width","borderRadius","height"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport React,{useState} from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\n\r\nfunction Comment(props) {\r\n    const videoId = props.postId;\r\n\r\n    const user = useSelector(state => state.user);\r\n    const [commentValue, setCommentValue] = useState(\"\")\r\n\r\n    const handleClick = (event)=>{\r\n        setCommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            content: commentValue,\r\n            writer: user.userData._id,\r\n            postId: videoId\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.result)\r\n                    setCommentValue(\"\") //초기화\r\n                    props.refreshFunction(response.data.result) //save한 comment의 정보를 부모 component에서 받을 수 있게!\r\n                } else {\r\n                    alert('코멘트 등록에 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop:'1.5rem'}}>\r\n            <br/>\r\n            <p>Replies</p>\r\n            <hr/>\r\n\r\n            {/* Comment Lists */}\r\n            {console.log(props.commentLists)}\r\n\r\n            {props.commentLists && props.commentLists.map((comment, index)=>(\r\n                (!comment.responseTo && \r\n                    <React.Fragment>\r\n                        <SingleComment comment={comment} postId={videoId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment parentCommentId={comment._id} commentLists={props.commentLists} videoId={videoId}/>\r\n                    </React.Fragment>\r\n                )\r\n            ))}\r\n\r\n\r\n\r\n            {/* Root Comment Form */}\r\n            <form style={{display:'flex'}} onSubmit={onSubmit} >\r\n                <textarea\r\n                    style={{width:'100%', borderRadius:'5px'}}\r\n                    onChange={handleClick}\r\n                    value={commentValue}\r\n                    placeholder=\"코멘트를 작성해 주세요\"\r\n                />\r\n                <br/>\r\n                <button style={{width:'20%', height:'52px'}} onClick={onSubmit}>Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}