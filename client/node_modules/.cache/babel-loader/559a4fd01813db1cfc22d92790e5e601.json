{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\VideoDetailPage\\\\Section\\\\Comment.js\";\nimport Axios from 'axios';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nimport { Avatar } from 'antd';\n\nfunction Comment(props) {\n  const user = useSelector(state => state.user);\n  const [Visible, setVisible] = useState(false);\n  const [commentValue, setCommentValue] = useState(\"\");\n\n  const handleClick = event => {\n    setCommentValue(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const variables = {\n      content: commentValue,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    Axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        console.log(response.data.result);\n        setCommentValue(\"\"); //초기화\n\n        props.refreshFunction(response.data.result); //save한 comment의 정보를 부모 component에서 받을 수 있게!\n      } else {\n        alert('코멘트 등록에 실패했습니다.');\n      }\n    });\n  };\n\n  const CommentList = props.commentLists && props.commentLists.map((comment, index) => !comment.responseTo && /*#__PURE__*/React.createElement(React.Fragment, {\n    key: comment._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ReplyComment, {\n    parentCommentId: comment._id,\n    commentLists: props.commentLists,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '1.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: '700',\n      marginLeft: '0.5rem',\n      marginBottom: '1rem'\n    },\n    onClick: () => {\n      setVisible(!Visible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"\\uB313\\uAE00\"), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '10%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '58px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: props.avatar,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginBottom: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"commentForm\",\n    style: {\n      width: '100%'\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"commentInput\",\n    onChange: handleClick,\n    value: commentValue,\n    placeholder: \"\\uCF54\\uBA58\\uD2B8\\uB97C \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"commentBtn\",\n    style: {\n      width: '15%'\n    },\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Submit\"))), Visible && CommentList);\n}\n\nexport default Comment;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/VideoDetailPage/Section/Comment.js"],"names":["Axios","React","useState","useSelector","SingleComment","ReplyComment","Avatar","Comment","props","user","state","Visible","setVisible","commentValue","setCommentValue","handleClick","event","currentTarget","value","onSubmit","preventDefault","variables","content","writer","userData","_id","postId","post","then","response","data","success","console","log","result","refreshFunction","alert","CommentList","commentLists","map","comment","index","responseTo","marginTop","fontWeight","marginLeft","marginBottom","display","height","width","flexDirection","alignItems","avatar","name"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport React,{useState} from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\nimport {Avatar} from 'antd';\r\n\r\nfunction Comment(props) {\r\n    const user = useSelector(state => state.user);\r\n    const [Visible, setVisible] = useState(false);\r\n    const [commentValue, setCommentValue] = useState(\"\")\r\n\r\n    const handleClick = (event)=>{\r\n        setCommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            content: commentValue,\r\n            writer: user.userData._id,\r\n            postId: props.postId\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.result)\r\n                    setCommentValue(\"\") //초기화\r\n                    props.refreshFunction(response.data.result) //save한 comment의 정보를 부모 component에서 받을 수 있게!\r\n                } else {\r\n                    alert('코멘트 등록에 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    const CommentList = \r\n        props.commentLists && props.commentLists.map((comment, index)=>(\r\n            (!comment.responseTo && \r\n                <React.Fragment  key={comment._id}>\r\n                    <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                    <ReplyComment parentCommentId={comment._id} commentLists={props.commentLists} postId={props.postId} refreshFunction={props.refreshFunction}/>\r\n                </React.Fragment>\r\n            )\r\n        ))\r\n\r\n    return (\r\n        <div style={{marginTop:'1.5rem'}}>\r\n            <br/>\r\n            <p style={{fontWeight:'700', marginLeft:'0.5rem',marginBottom:'1rem'}} onClick={()=> {setVisible(!Visible)}}>댓글</p>\r\n            <hr style={{}}/>\r\n            <div style={{display:'flex', height:'100%'}}>\r\n                <div style={{width:'10%',display:'flex', flexDirection:'column', alignItems:'center', height:'58px'}}>\r\n                    <Avatar src={props.avatar} alt=\"avatar\"/>\r\n                    <p style={{marginBottom:'0'}}>{props.name}</p>\r\n                </div>\r\n\r\n                {/* Root Comment Form */}\r\n                <form className='commentForm' style={{width:'100%'}} onSubmit={onSubmit} >\r\n                    <textarea\r\n                        className='commentInput'\r\n                        onChange={handleClick}\r\n                        value={commentValue}\r\n                        placeholder=\"코멘트를 작성해 주세요\"\r\n                    />\r\n\r\n                    <button className='commentBtn' style={{width:'15%'}} onClick={onSubmit}>Submit</button>\r\n                </form>\r\n            </div>\r\n\r\n            {/* <hr/> */}\r\n\r\n            {/* Comment Lists */}\r\n            {Visible && CommentList}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}