{"ast":null,"code":"var _jsxFileName = \"D:\\\\boilerplate-mern-stack-master\\\\client\\\\src\\\\components\\\\views\\\\SubscriptionPage\\\\SubscriptionPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Avatar, Col, Typography, Row } from 'antd';\nimport Axios from 'axios';\nimport moment from 'moment';\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\n\nfunction SubscriptionPage() {\n  const [Video, setVideo] = useState([]);\n  console.log(Video);\n  useEffect(() => {\n    const subscriptionVariables = {\n      userFrom: localStorage.getItem('userId')\n    };\n    Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables).then(response => {\n      if (response.data.success) {\n        console.log(response.data.videos.length);\n        setVideo(response.data.videos);\n      } else {\n        alert('비디오 가져오기를 실패했습니다.');\n      }\n    });\n  }, []);\n  const renderCards = Video.map((video, index) => {\n    var minutes = Math.floor(video.duration / 60);\n    var seconds = Math.floor(video.duration - minutes * 60); // Col 사이즈별로 들어가는 동영상이 다르게 설정 (총 윈도우 너비=24)\n\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 8,\n      xs: 24,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/video/${video._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '100%'\n      },\n      src: `http://localhost:5000/${video.thumbnail}`,\n      alt: \"\\uC378\\uB124\\uC77C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, minutes, \" : \", seconds)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: video.writer.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 27\n        }\n      }),\n      title: video.title,\n      description: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, video.writer.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '3rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, video.views, \" views\"), \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 79\n      }\n    }, moment(video.createdAt).format(\"MMM Do YY\")));\n  });\n\n  if (Video.length !== 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '85%',\n        margin: '3rem auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      level: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"\\uAD6C\\uB3C5\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      gutter: [32, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"\\uAD6C\\uB3C5\\uC911\\uC778 \\uD398\\uC774\\uC9C0 \\uBCF4\\uC5EC\\uC8FC\\uAE30\"), /*#__PURE__*/React.createElement(Row, {\n      gutter: [32, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, renderCards));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '85%',\n        margin: '3rem auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      level: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"\\uAD6C\\uB3C5\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'gray',\n        fontSize: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"\\uD604\\uC7AC \\uAD6C\\uB3C5\\uC911\\uC778 \\uD398\\uC774\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));\n  }\n}\n\nexport default SubscriptionPage;","map":{"version":3,"sources":["D:/boilerplate-mern-stack-master/client/src/components/views/SubscriptionPage/SubscriptionPage.js"],"names":["React","useEffect","useState","Card","Avatar","Col","Typography","Row","Axios","moment","Title","Meta","SubscriptionPage","Video","setVideo","console","log","subscriptionVariables","userFrom","localStorage","getItem","post","then","response","data","success","videos","length","alert","renderCards","map","video","index","minutes","Math","floor","duration","seconds","_id","position","width","thumbnail","writer","image","title","name","marginLeft","views","createdAt","format","margin","marginBottom","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwCC,GAAxC,QAAkD,MAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAkB,QAAlB;AACA,MAAM;AAACC,EAAAA;AAAD,IAAUJ,UAAhB;AACA,MAAM;AAACK,EAAAA;AAAD,IAASR,IAAf;;AAEA,SAASS,gBAAT,GAA4B;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAZ,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMgB,qBAAqB,GAAG;AAC1BC,MAAAA,QAAQ,EAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB;AADe,KAA9B;AAIAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,kCAAX,EAA8CJ,qBAA9C,EACGK,IADH,CACQC,QAAQ,IAAE;AACd,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBV,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACC,IAAT,CAAcE,MAAd,CAAqBC,MAAjC;AACAb,QAAAA,QAAQ,CAACS,QAAQ,CAACC,IAAT,CAAcE,MAAf,CAAR;AACH,OAHD,MAGK;AACHE,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,KARH;AASH,GAdQ,EAcP,EAdO,CAAT;AAgBA,QAAMC,WAAW,GAAGhB,KAAK,CAACiB,GAAN,CAAU,CAACC,KAAD,EAAOC,KAAP,KAAe;AACzC,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAN,GAAe,EAA1B,CAAd;AACA,QAAIC,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,QAAN,GAAiBH,OAAO,GAAG,EAAvC,CAAd,CAFyC,CAIzC;;AACA,wBAAO,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,GAAG,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAG,MAAA,IAAI,EAAG,UAASD,KAAK,CAACO,GAAI,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAA+B,MAAA,GAAG,EAAG,yBAAwBT,KAAK,CAACU,SAAU,EAA7E;AAAgF,MAAA,GAAG,EAAC,oBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,OAAP,SAAmBI,OAAnB,CADJ,CAFJ,CADJ,CADG,eASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATG,eAUH,oBAAC,IAAD;AAAM,MAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEN,KAAK,CAACW,MAAN,CAAaC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAmD,MAAA,KAAK,EAAEZ,KAAK,CAACa,KAAhE;AAAuE,MAAA,WAAW,EAAC,EAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVG,eAWH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOb,KAAK,CAACW,MAAN,CAAaG,IAApB,CAXG,eAW6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAX7B,eAYH;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCf,KAAK,CAACgB,KAA5C,WAZG,sBAY+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOtC,MAAM,CAACsB,KAAK,CAACiB,SAAP,CAAN,CAAwBC,MAAxB,CAA+B,WAA/B,CAAP,CAZ/D,CAAP;AAcH,GAnBmB,CAApB;;AAqBA,MAAGpC,KAAK,CAACc,MAAN,KAAiB,CAApB,EAAsB;AAClB,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE,KAAT;AAAgBU,QAAAA,MAAM,EAAE;AAAxB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAHJ,eAMI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKtB,WADL,CANJ,CADJ;AAaH,GAdD,MAcK;AACD,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE,KAAT;AAAgBU,QAAAA,MAAM,EAAE;AAAxB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,QAAQ,EAAC;AAAxB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGADJ,CAHA,CADJ;AAUH;AAGJ;;AAED,eAAezC,gBAAf","sourcesContent":["import React, { useEffect , useState} from 'react'\r\nimport {Card,  Avatar, Col, Typography, Row} from 'antd';\r\nimport Axios from 'axios';\r\nimport moment from'moment';\r\nconst {Title} = Typography;\r\nconst {Meta} = Card;\r\n\r\nfunction SubscriptionPage() {\r\n    const [Video, setVideo] = useState([])\r\n    \r\n    console.log(Video);\r\n\r\n    useEffect(()=>{\r\n        const subscriptionVariables = {\r\n            userFrom : localStorage.getItem('userId')\r\n        }\r\n\r\n        Axios.post('/api/video/getSubscriptionVideos',subscriptionVariables)\r\n          .then(response=>{\r\n            if(response.data.success){\r\n                console.log(response.data.videos.length)\r\n                setVideo(response.data.videos)\r\n            }else{\r\n              alert('비디오 가져오기를 실패했습니다.')\r\n            }\r\n          })\r\n    },[])\r\n\r\n    const renderCards = Video.map((video,index)=>{\r\n        var minutes = Math.floor(video.duration/60);\r\n        var seconds = Math.floor((video.duration - minutes * 60));\r\n\r\n        // Col 사이즈별로 들어가는 동영상이 다르게 설정 (총 윈도우 너비=24)\r\n        return <Col lg={6} md={8} xs={24} key={index}>\r\n            <a href={`/video/${video._id}`}>\r\n                <div style={{ position: 'relative' }}>\r\n                    <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"썸네일\" />\r\n                    <div className='duration'>\r\n                        <span>{minutes} : {seconds}</span>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n            <br />\r\n            <Meta avatar={<Avatar src={video.writer.image} />} title={video.title} description=\"\" />\r\n            <span>{video.writer.name}</span><br/>\r\n            <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n        </Col>\r\n    })\r\n\r\n    if(Video.length !== 0){\r\n        return (\r\n            <div style={{ width: '85%', margin: '3rem auto' }}>\r\n                <Title level={2}>구독</Title>\r\n                <hr style={{ marginBottom: '2rem' }} />\r\n                <Row gutter={[32, 16]}>\r\n                    구독중인 페이지 보여주기\r\n                </Row>\r\n                <Row gutter={[32, 16]}>\r\n                    {renderCards}\r\n                </Row>\r\n    \r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2}>구독</Title>\r\n            <hr style={{ marginBottom: '2rem' }} />\r\n            <Row>\r\n                <p style={{color:'gray', fontSize:'1rem'}}>현재 구독중인 페이지가 없습니다.</p>\r\n            </Row>\r\n\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SubscriptionPage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}