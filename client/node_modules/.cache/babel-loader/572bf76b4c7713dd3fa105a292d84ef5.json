{"ast":null,"code":"var _jsxFileName = \"D:\\\\Youtube\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Avatar, Col, Typography, Row } from \"antd\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\n\nfunction LandingPage() {\n  const [Video, setVideo] = useState([]);\n  useEffect(() => {\n    Axios.get(\"/api/video/getVideos\").then(response => {\n      if (response.data.success) {\n        // console.log(response.data)\n        setVideo(response.data.videos);\n      } else {\n        alert(\"비디오 가져오기를 실패했습니다.\");\n      }\n    });\n  }, [Video.length]);\n  const renderCards = Video.map((video, index) => {\n    var minutes = Math.floor(video.duration / 60);\n    var seconds = Math.floor(video.duration - minutes * 60); // Col 사이즈별로 들어가는 동영상이 다르게 설정 (총 윈도우 너비=24)\n\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 8,\n      xs: 24,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/video/${video._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"100%\"\n      },\n      src: `http://localhost:5000/${video.thumbnail}`,\n      alt: \"\\uC378\\uB124\\uC77C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, minutes, \" : \", seconds)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: video.writer.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }),\n      title: video.title,\n      description: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, video.writer.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: \"3rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, video.views, \" views\"), \" -\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, moment(video.createdAt).format(\"MMM Do YY\")));\n  }); // const onSubmit = (e) => {\n  //     e.preventDefault();\n  //     const { page } = qs.parse(location.search, {\n  //         ignoreQueryPrefix: true,\n  //     });\n  //     dispatch(searchPosts({ page: page, option: options, content: value }));\n  //     setValue('');\n  // };\n  // const searchPosts = ({ page, option, content }) => {\n  //     const queryString = qs.stringify({\n  //         page,\n  //         option,\n  //         content\n  //     });\n  //     return client.get(`/api/posts/search?${queryString}`);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"85%\",\n      margin: \"3rem auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"\\uCD94\\uCC9C \\uBE44\\uB514\\uC624\"), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      marginBottom: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: [32, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, renderCards));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["D:/Youtube/client/src/components/views/LandingPage/LandingPage.js"],"names":["React","useEffect","useState","Card","Avatar","Col","Typography","Row","Axios","moment","Title","Meta","LandingPage","Video","setVideo","get","then","response","data","success","videos","alert","length","renderCards","map","video","index","minutes","Math","floor","duration","seconds","_id","position","width","thumbnail","writer","image","title","name","marginLeft","views","createdAt","format","margin","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,UAA5B,EAAwCC,GAAxC,QAAmD,MAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYJ,UAAlB;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAWR,IAAjB;;AAEA,SAASS,WAAT,GAAuB;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACO,GAAN,CAAU,sBAAV,EAAkCC,IAAlC,CAAwCC,QAAD,IAAc;AACnD,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzB;AACAL,QAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAT,CAAcE,MAAf,CAAR;AACD,OAHD,MAGO;AACLC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,KAPD;AAQD,GATQ,EASN,CAACR,KAAK,CAACS,MAAP,CATM,CAAT;AAWA,QAAMC,WAAW,GAAGV,KAAK,CAACW,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC9C,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAN,GAAiB,EAA5B,CAAd;AACA,QAAIC,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAN,GAAiBH,OAAO,GAAG,EAAtC,CAAd,CAF8C,CAI9C;;AACA,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,GAAG,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAG,UAASD,KAAK,CAACO,GAAI,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,GAAG,EAAG,yBAAwBT,KAAK,CAACU,SAAU,EAFhD;AAGE,MAAA,GAAG,EAAC,oBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,OADH,SACeI,OADf,CADF,CANF,CADF,CADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAgBE,oBAAC,IAAD;AACE,MAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEN,KAAK,CAACW,MAAN,CAAaC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,KAAK,EAAEZ,KAAK,CAACa,KAFf;AAGE,MAAA,WAAW,EAAC,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOb,KAAK,CAACW,MAAN,CAAaG,IAApB,CArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,eAuBE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCf,KAAK,CAACgB,KAA5C,WAvBF,QAuBoE,GAvBpE,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOhC,MAAM,CAACgB,KAAK,CAACiB,SAAP,CAAN,CAAwBC,MAAxB,CAA+B,WAA/B,CAAP,CAxBF,CADF;AA4BD,GAjCmB,CAApB,CAdqB,CAiDrB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAET,MAAAA,KAAK,EAAE,KAAT;AAAgBU,MAAAA,MAAM,EAAE;AAAxB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBtB,WAAxB,CAHF,CADF;AAuBD;;AAED,eAAeX,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Avatar, Col, Typography, Row } from \"antd\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nconst { Title } = Typography;\nconst { Meta } = Card;\n\nfunction LandingPage() {\n  const [Video, setVideo] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"/api/video/getVideos\").then((response) => {\n      if (response.data.success) {\n        // console.log(response.data)\n        setVideo(response.data.videos);\n      } else {\n        alert(\"비디오 가져오기를 실패했습니다.\");\n      }\n    });\n  }, [Video.length]);\n\n  const renderCards = Video.map((video, index) => {\n    var minutes = Math.floor(video.duration / 60);\n    var seconds = Math.floor(video.duration - minutes * 60);\n\n    // Col 사이즈별로 들어가는 동영상이 다르게 설정 (총 윈도우 너비=24)\n    return (\n      <Col lg={6} md={8} xs={24} key={index}>\n        <a href={`/video/${video._id}`}>\n          <div style={{ position: \"relative\" }}>\n            <img\n              style={{ width: \"100%\" }}\n              src={`http://localhost:5000/${video.thumbnail}`}\n              alt=\"썸네일\"\n            />\n            <div className=\"duration\">\n              <span>\n                {minutes} : {seconds}\n              </span>\n            </div>\n          </div>\n        </a>\n        <br />\n        <Meta\n          avatar={<Avatar src={video.writer.image} />}\n          title={video.title}\n          description=\"\"\n        />\n        <span>{video.writer.name}</span>\n        <br />\n        <span style={{ marginLeft: \"3rem\" }}>{video.views} views</span> -{\" \"}\n        <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\n      </Col>\n    );\n  });\n\n  // const onSubmit = (e) => {\n  //     e.preventDefault();\n  //     const { page } = qs.parse(location.search, {\n  //         ignoreQueryPrefix: true,\n  //     });\n\n  //     dispatch(searchPosts({ page: page, option: options, content: value }));\n  //     setValue('');\n  // };\n\n  // const searchPosts = ({ page, option, content }) => {\n  //     const queryString = qs.stringify({\n  //         page,\n  //         option,\n  //         content\n  //     });\n  //     return client.get(`/api/posts/search?${queryString}`);\n  // }\n\n  return (\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\n      <Title level={2}>추천 비디오</Title>\n      <hr style={{ marginBottom: \"2rem\" }} />\n      <Row gutter={[32, 16]}>{renderCards}</Row>\n\n      {/* <form method=\"get\" onSubmit={onSubmit}>\n                <select value={options} onChange={selectHandle}>\n                    <option value=\"title\">제목</option>\n                    <option value=\"body\">내용</option>\n                    <option value=\"title_body\">제목+내용</option>\n                </select>\n                <input\n                    type=\"text\" name=\"searchText\"\n                    onChange={handleChange}\n                    value={value}\n                    placeholder=\"검색어를 입력하세요\" />\n                <div>\n                    <Cbutton type=\"submit\" onClick={onSubmit}>검색</Cbutton>\n                </div>\n            </form> */}\n    </div>\n  );\n}\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}